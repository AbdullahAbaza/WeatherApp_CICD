- name: Setup Docker And spin-up Weather_App Container
  hosts: webservers
  become: true
  vars:
    docker_group: docker
  tasks:
    - name: Install Required Packages for adding Docker
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - lsb-release
          - gnupg
        state: latest
        update_cache: true


    - name: Add signing key
      ansible.builtin.apt_key:
        url: "https://download.docker.com/linux/{{ ansible_os_family | lower }}/gpg"
        state: present


    - name: Get DEB architecture
      shell: dpkg --print-architecture
      register: deb_architecture


    - name: Determine System Architecture
      set_fact:
        distribution: Debian
        distribution_release: bullseye
      when: ansible_distribution == "Kali" and ansible_distribution_release == "kali-rolling"
    
    
    - name: Set default distribution values to Handle Special Distribution Cases
      set_fact:
        distribution: "{{ ansible_distribution }}"
        distribution_release: "{{ ansible_distribution_release }}"
      when: distribution is not defined and distribution_release is not defined
    
    
    - name: Add repository into sources list
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ deb_architecture.stdout }}] https://download.docker.com/linux/{{ distribution | lower }} {{ distribution_release }} stable"
        state: present
        filename: docker
    
    
    - name: Install Docker
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose
          - docker-compose-plugin
        state: latest
        update_cache: true
    
    
    - name: Start and enable service docker
      ansible.builtin.service:
        name: docker
        enabled: yes
        state: started
    
    
    - name: Create docker group
      group:
        name: "{{ docker_group }}"
        state: present
    
    
    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        group: "{{ docker_group }}"
    
    
    - name: Pull Docker image
      docker_image:
        name: docker.io/abdullahabaza/weather_app
        source: pull
        tag: latest
    
    
    - name: Check if Docker container is already running
      docker_container_info:
        name: weather_app
      register: container_info
      ignore_errors: true  # Ignore errors if the container does not exist

    - name: Run Docker Container if not already running
      docker_container:
        name: weather_app
        image: docker.io/abdullahabaza/weather_app:latest
        state: started
        ports:
          - "5001:5001"
      when: container_info is not defined or container_info.containers | length == 0
